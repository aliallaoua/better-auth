/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgetPasswordRouteImport } from './routes/forget-password'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as PostsRouteRouteImport } from './routes/posts.route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsIndexRouteImport } from './routes/posts.index'
import { Route as ApiSendRouteImport } from './routes/api/send'
import { Route as AcceptInvitationIdRouteImport } from './routes/accept-invitation/$id'
import { Route as AuthPathlessLayoutRouteRouteImport } from './routes/_auth/_pathlessLayout/route'
import { Route as PostsPostIdIndexRouteImport } from './routes/posts.$postId.index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as AuthPathlessLayoutUnauthorizedRouteImport } from './routes/_auth/_pathlessLayout/unauthorized'
import { Route as AuthPathlessLayoutResendRouteImport } from './routes/_auth/_pathlessLayout/resend'
import { Route as AuthPathlessLayoutProfileRouteImport } from './routes/_auth/_pathlessLayout/profile'
import { Route as AuthPathlessLayoutDashboardRouteImport } from './routes/_auth/_pathlessLayout/dashboard'
import { Route as PostsPostIdCommentsIndexRouteImport } from './routes/posts.$postId.comments.index'
import { Route as AuthPathlessLayoutAdminIndexRouteImport } from './routes/_auth/_pathlessLayout/admin/index'
import { Route as AuthPathlessLayoutAdminAdmincopyRouteImport } from './routes/_auth/_pathlessLayout/admin/admin copy'
import { Route as PostsPostIdCommentsCommentIdIndexRouteImport } from './routes/posts.$postId.comments.$commentId.index'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgetPasswordRoute = ForgetPasswordRouteImport.update({
  id: '/forget-password',
  path: '/forget-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRouteRoute = PostsRouteRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)
const ApiSendRoute = ApiSendRouteImport.update({
  id: '/api/send',
  path: '/api/send',
  getParentRoute: () => rootRouteImport,
} as any)
const AcceptInvitationIdRoute = AcceptInvitationIdRouteImport.update({
  id: '/accept-invitation/$id',
  path: '/accept-invitation/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPathlessLayoutRouteRoute = AuthPathlessLayoutRouteRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => AuthRoute,
} as any)
const PostsPostIdIndexRoute = PostsPostIdIndexRouteImport.update({
  id: '/$postId/',
  path: '/$postId/',
  getParentRoute: () => PostsRouteRoute,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPathlessLayoutUnauthorizedRoute =
  AuthPathlessLayoutUnauthorizedRouteImport.update({
    id: '/unauthorized',
    path: '/unauthorized',
    getParentRoute: () => AuthPathlessLayoutRouteRoute,
  } as any)
const AuthPathlessLayoutResendRoute =
  AuthPathlessLayoutResendRouteImport.update({
    id: '/resend',
    path: '/resend',
    getParentRoute: () => AuthPathlessLayoutRouteRoute,
  } as any)
const AuthPathlessLayoutProfileRoute =
  AuthPathlessLayoutProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthPathlessLayoutRouteRoute,
  } as any)
const AuthPathlessLayoutDashboardRoute =
  AuthPathlessLayoutDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthPathlessLayoutRouteRoute,
  } as any)
const PostsPostIdCommentsIndexRoute =
  PostsPostIdCommentsIndexRouteImport.update({
    id: '/$postId/comments/',
    path: '/$postId/comments/',
    getParentRoute: () => PostsRouteRoute,
  } as any)
const AuthPathlessLayoutAdminIndexRoute =
  AuthPathlessLayoutAdminIndexRouteImport.update({
    id: '/admin/',
    path: '/admin/',
    getParentRoute: () => AuthPathlessLayoutRouteRoute,
  } as any)
const AuthPathlessLayoutAdminAdmincopyRoute =
  AuthPathlessLayoutAdminAdmincopyRouteImport.update({
    id: '/admin/admin copy',
    path: '/admin/admin copy',
    getParentRoute: () => AuthPathlessLayoutRouteRoute,
  } as any)
const PostsPostIdCommentsCommentIdIndexRoute =
  PostsPostIdCommentsCommentIdIndexRouteImport.update({
    id: '/$postId/comments/$commentId/',
    path: '/$postId/comments/$commentId/',
    getParentRoute: () => PostsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteRouteWithChildren
  '/forget-password': typeof ForgetPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/accept-invitation/$id': typeof AcceptInvitationIdRoute
  '/api/send': typeof ApiSendRoute
  '/posts/': typeof PostsIndexRoute
  '/dashboard': typeof AuthPathlessLayoutDashboardRoute
  '/profile': typeof AuthPathlessLayoutProfileRoute
  '/resend': typeof AuthPathlessLayoutResendRoute
  '/unauthorized': typeof AuthPathlessLayoutUnauthorizedRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/posts/$postId': typeof PostsPostIdIndexRoute
  '/admin/admin copy': typeof AuthPathlessLayoutAdminAdmincopyRoute
  '/admin': typeof AuthPathlessLayoutAdminIndexRoute
  '/posts/$postId/comments': typeof PostsPostIdCommentsIndexRoute
  '/posts/$postId/comments/$commentId': typeof PostsPostIdCommentsCommentIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forget-password': typeof ForgetPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/accept-invitation/$id': typeof AcceptInvitationIdRoute
  '/api/send': typeof ApiSendRoute
  '/posts': typeof PostsIndexRoute
  '/dashboard': typeof AuthPathlessLayoutDashboardRoute
  '/profile': typeof AuthPathlessLayoutProfileRoute
  '/resend': typeof AuthPathlessLayoutResendRoute
  '/unauthorized': typeof AuthPathlessLayoutUnauthorizedRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/posts/$postId': typeof PostsPostIdIndexRoute
  '/admin/admin copy': typeof AuthPathlessLayoutAdminAdmincopyRoute
  '/admin': typeof AuthPathlessLayoutAdminIndexRoute
  '/posts/$postId/comments': typeof PostsPostIdCommentsIndexRoute
  '/posts/$postId/comments/$commentId': typeof PostsPostIdCommentsCommentIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/forget-password': typeof ForgetPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_auth/_pathlessLayout': typeof AuthPathlessLayoutRouteRouteWithChildren
  '/accept-invitation/$id': typeof AcceptInvitationIdRoute
  '/api/send': typeof ApiSendRoute
  '/posts/': typeof PostsIndexRoute
  '/_auth/_pathlessLayout/dashboard': typeof AuthPathlessLayoutDashboardRoute
  '/_auth/_pathlessLayout/profile': typeof AuthPathlessLayoutProfileRoute
  '/_auth/_pathlessLayout/resend': typeof AuthPathlessLayoutResendRoute
  '/_auth/_pathlessLayout/unauthorized': typeof AuthPathlessLayoutUnauthorizedRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/posts/$postId/': typeof PostsPostIdIndexRoute
  '/_auth/_pathlessLayout/admin/admin copy': typeof AuthPathlessLayoutAdminAdmincopyRoute
  '/_auth/_pathlessLayout/admin/': typeof AuthPathlessLayoutAdminIndexRoute
  '/posts/$postId/comments/': typeof PostsPostIdCommentsIndexRoute
  '/posts/$postId/comments/$commentId/': typeof PostsPostIdCommentsCommentIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/posts'
    | '/forget-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/accept-invitation/$id'
    | '/api/send'
    | '/posts/'
    | '/dashboard'
    | '/profile'
    | '/resend'
    | '/unauthorized'
    | '/api/auth/$'
    | '/posts/$postId'
    | '/admin/admin copy'
    | '/admin'
    | '/posts/$postId/comments'
    | '/posts/$postId/comments/$commentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forget-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/accept-invitation/$id'
    | '/api/send'
    | '/posts'
    | '/dashboard'
    | '/profile'
    | '/resend'
    | '/unauthorized'
    | '/api/auth/$'
    | '/posts/$postId'
    | '/admin/admin copy'
    | '/admin'
    | '/posts/$postId/comments'
    | '/posts/$postId/comments/$commentId'
  id:
    | '__root__'
    | '/'
    | '/posts'
    | '/_auth'
    | '/forget-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/_auth/_pathlessLayout'
    | '/accept-invitation/$id'
    | '/api/send'
    | '/posts/'
    | '/_auth/_pathlessLayout/dashboard'
    | '/_auth/_pathlessLayout/profile'
    | '/_auth/_pathlessLayout/resend'
    | '/_auth/_pathlessLayout/unauthorized'
    | '/api/auth/$'
    | '/posts/$postId/'
    | '/_auth/_pathlessLayout/admin/admin copy'
    | '/_auth/_pathlessLayout/admin/'
    | '/posts/$postId/comments/'
    | '/posts/$postId/comments/$commentId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  ForgetPasswordRoute: typeof ForgetPasswordRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  AcceptInvitationIdRoute: typeof AcceptInvitationIdRoute
  ApiSendRoute: typeof ApiSendRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forget-password': {
      id: '/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof ForgetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/api/send': {
      id: '/api/send'
      path: '/api/send'
      fullPath: '/api/send'
      preLoaderRoute: typeof ApiSendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accept-invitation/$id': {
      id: '/accept-invitation/$id'
      path: '/accept-invitation/$id'
      fullPath: '/accept-invitation/$id'
      preLoaderRoute: typeof AcceptInvitationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/_pathlessLayout': {
      id: '/_auth/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthPathlessLayoutRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/posts/$postId/': {
      id: '/posts/$postId/'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/_pathlessLayout/unauthorized': {
      id: '/_auth/_pathlessLayout/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof AuthPathlessLayoutUnauthorizedRouteImport
      parentRoute: typeof AuthPathlessLayoutRouteRoute
    }
    '/_auth/_pathlessLayout/resend': {
      id: '/_auth/_pathlessLayout/resend'
      path: '/resend'
      fullPath: '/resend'
      preLoaderRoute: typeof AuthPathlessLayoutResendRouteImport
      parentRoute: typeof AuthPathlessLayoutRouteRoute
    }
    '/_auth/_pathlessLayout/profile': {
      id: '/_auth/_pathlessLayout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthPathlessLayoutProfileRouteImport
      parentRoute: typeof AuthPathlessLayoutRouteRoute
    }
    '/_auth/_pathlessLayout/dashboard': {
      id: '/_auth/_pathlessLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthPathlessLayoutDashboardRouteImport
      parentRoute: typeof AuthPathlessLayoutRouteRoute
    }
    '/posts/$postId/comments/': {
      id: '/posts/$postId/comments/'
      path: '/$postId/comments'
      fullPath: '/posts/$postId/comments'
      preLoaderRoute: typeof PostsPostIdCommentsIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/_auth/_pathlessLayout/admin/': {
      id: '/_auth/_pathlessLayout/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthPathlessLayoutAdminIndexRouteImport
      parentRoute: typeof AuthPathlessLayoutRouteRoute
    }
    '/_auth/_pathlessLayout/admin/admin copy': {
      id: '/_auth/_pathlessLayout/admin/admin copy'
      path: '/admin/admin copy'
      fullPath: '/admin/admin copy'
      preLoaderRoute: typeof AuthPathlessLayoutAdminAdmincopyRouteImport
      parentRoute: typeof AuthPathlessLayoutRouteRoute
    }
    '/posts/$postId/comments/$commentId/': {
      id: '/posts/$postId/comments/$commentId/'
      path: '/$postId/comments/$commentId'
      fullPath: '/posts/$postId/comments/$commentId'
      preLoaderRoute: typeof PostsPostIdCommentsCommentIdIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
  }
}

interface PostsRouteRouteChildren {
  PostsIndexRoute: typeof PostsIndexRoute
  PostsPostIdIndexRoute: typeof PostsPostIdIndexRoute
  PostsPostIdCommentsIndexRoute: typeof PostsPostIdCommentsIndexRoute
  PostsPostIdCommentsCommentIdIndexRoute: typeof PostsPostIdCommentsCommentIdIndexRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsIndexRoute: PostsIndexRoute,
  PostsPostIdIndexRoute: PostsPostIdIndexRoute,
  PostsPostIdCommentsIndexRoute: PostsPostIdCommentsIndexRoute,
  PostsPostIdCommentsCommentIdIndexRoute:
    PostsPostIdCommentsCommentIdIndexRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

interface AuthPathlessLayoutRouteRouteChildren {
  AuthPathlessLayoutDashboardRoute: typeof AuthPathlessLayoutDashboardRoute
  AuthPathlessLayoutProfileRoute: typeof AuthPathlessLayoutProfileRoute
  AuthPathlessLayoutResendRoute: typeof AuthPathlessLayoutResendRoute
  AuthPathlessLayoutUnauthorizedRoute: typeof AuthPathlessLayoutUnauthorizedRoute
  AuthPathlessLayoutAdminAdmincopyRoute: typeof AuthPathlessLayoutAdminAdmincopyRoute
  AuthPathlessLayoutAdminIndexRoute: typeof AuthPathlessLayoutAdminIndexRoute
}

const AuthPathlessLayoutRouteRouteChildren: AuthPathlessLayoutRouteRouteChildren =
  {
    AuthPathlessLayoutDashboardRoute: AuthPathlessLayoutDashboardRoute,
    AuthPathlessLayoutProfileRoute: AuthPathlessLayoutProfileRoute,
    AuthPathlessLayoutResendRoute: AuthPathlessLayoutResendRoute,
    AuthPathlessLayoutUnauthorizedRoute: AuthPathlessLayoutUnauthorizedRoute,
    AuthPathlessLayoutAdminAdmincopyRoute:
      AuthPathlessLayoutAdminAdmincopyRoute,
    AuthPathlessLayoutAdminIndexRoute: AuthPathlessLayoutAdminIndexRoute,
  }

const AuthPathlessLayoutRouteRouteWithChildren =
  AuthPathlessLayoutRouteRoute._addFileChildren(
    AuthPathlessLayoutRouteRouteChildren,
  )

interface AuthRouteChildren {
  AuthPathlessLayoutRouteRoute: typeof AuthPathlessLayoutRouteRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthPathlessLayoutRouteRoute: AuthPathlessLayoutRouteRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostsRouteRoute: PostsRouteRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  ForgetPasswordRoute: ForgetPasswordRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  AcceptInvitationIdRoute: AcceptInvitationIdRoute,
  ApiSendRoute: ApiSendRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
